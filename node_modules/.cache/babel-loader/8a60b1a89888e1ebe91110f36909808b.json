{"ast":null,"code":"var _jsxFileName = \"/home/mohamedhamed/File react js/src/components/Todo/create.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { postdata } from \"../reducer/index\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [images, setImage] = React.useState(null); //vlaue image  useState\n\n  const names = React.useRef(); //refrance value name \n\n  const Descraption = React.useRef(); //refrance value name\n\n  const handel = e => e.preventDefault(); //handel form\n  //#region // handelform method create photo \n\n\n  const handelform = () => {\n    try {\n      //create forma data pass in post  api in reducer\n      let formField = new FormData();\n      formField.append(\"name\", names.current.value); //value name\n\n      formField.append(\"description\", Descraption.current.value); //value  Descraption\n\n      if (images !== null) {\n        formField.append(\"image\", images); //value image\n      }\n\n      dispatch(postdata(formField)); // import postdata from store redux by  dispatch\n    } catch (error) {\n      console.log(error);\n    }\n  }; //#endregion\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 offset-3 mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Insert photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: names,\n              type: \"text\",\n              className: \"form-control\",\n              id: \"title\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Descraption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: Descraption,\n              type: \"text\",\n              className: \"form-control\",\n              id: \"Descraption\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Description\",\n              children: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"file\",\n              onChange: e => setImage(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handelform,\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Create, \"v83JUTHMO5NKbPgm8HIcNdP1sZw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/mohamedhamed/File react js/src/components/Todo/create.jsx"],"names":["React","postdata","useDispatch","Create","dispatch","images","setImage","useState","names","useRef","Descraption","handel","e","preventDefault","handelform","formField","FormData","append","current","value","error","console","log","target","files"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { postdata } from \"../reducer/index\";\n\nimport {  useDispatch } from \"react-redux\";    \nconst Create = () => {\n  const dispatch = useDispatch();\n  const [images, setImage] = React.useState(null); //vlaue image  useState\n\n  const names = React.useRef();   //refrance value name \n  const Descraption = React.useRef(); //refrance value name\nconst handel = (e) =>    e.preventDefault()  //handel form\n//#region // handelform method create photo \n  const handelform =  () => {\n   try{\n     //create forma data pass in post  api in reducer\n    let formField = new FormData();\n    formField.append(\"name\", names.current.value); //value name\n    formField.append(\"description\", Descraption.current.value); //value  Descraption\n\n    if (images !== null) {\n      formField.append(\"image\", images); //value image\n    }\n\n     dispatch(postdata(formField)); // import postdata from store redux by  dispatch\n\n   }catch(error){\n     \n    console.log(error)\n   }\n  };\n\n   //#endregion\n  \n\n  return (\n    <>\n    <form >\n\n    <div className=\"row\">\n\n      <div className=\"col-6 offset-3 mt-3\">\n        <h2>Insert photo</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Title</label>\n          <input\n            ref={names}\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Descraption</label>\n          <input\n            ref={Descraption}\n            type=\"text\"\n            className=\"form-control\"\n            id=\"Descraption\"\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"Description\">image</label>\n          <input\n            className=\"form-control\"\n            type=\"file\"\n            onChange={(e) => setImage(e.target.files[0])}  \n          />\n        </div>\n       <button onClick={handelform} type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n     \n      </div>\n    </div>\n    </form>\n    </>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}